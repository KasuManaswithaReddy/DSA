// Longest Common Subsequence problem

//{ Driver Code Starts
#include<bits/stdc++.h>
const int mod=1e9+7;
using namespace std;

// } Driver Code Ends
// function to find longest common subsequence

class Solution
{
    public:
    //Function to find the length of longest common subsequence in two strings.
    int lcs(int n, int m, string s1, string s2)
     {
         vector<vector<int>> dp(n+1, vector<int>(m+1));      // dp[n+1][m+1]
         
         for(int i = n-1; i>=0 ; i--)
         {
             for(int j = m-1; j>=0; j--)
             {
                 char ch1 = s1[i];
                 char ch2 = s2[j];
                 
                 if(ch1 == ch2)
                 {
                     dp[i][j] = 1 + dp[i+1][j+1];
                 }
                 
                 else
                 {
                     dp[i][j] = max(dp[i+1][j] , dp[i][j+1]);
                 }
                 
                 
             }
         }
         
         return dp[0][0];
         
     
     
     
     
     
     
     
     
     
        
//   int solve(string & a, string & b,int n , int m, int i , int j, vector<vector<int>> & dp)
//     {
//         if(i == n)
//         return 0;
        
//          if(j == m)
//         return 0;
        
//         if(dp[i][j]!= -1)
//         return dp[i][j];
        
//         int ans = 0 ;
//         if(a[i] == b[j])
//         ans = 1 + solve(a , b , n , m , i+1, j+1, dp);
        
//         else
//         ans = max( solve(a , b , n , m , i+1, j, dp) , solve(a , b , n , m , i, j+1, dp));
   
//         return dp[i][j] = ans;
//     }
    
    
//     //Function to find the length of longest common subsequence in two strings.
//     int lcs(int n, int m, string s1, string s2)
//     {
//          vector<vector<int>> dp(n, vector<int>(m, -1));
//          return solve(s1, s2 ,n,m, 0 , 0 , dp);
    }
};


//{ Driver Code Starts.
int main()
{
    int t,n,m;
    cin>>t;
    while(t--)
    {
        cin>>n>>m;          // Take size of both the strings as input
        string s1,s2;
        cin>>s1>>s2;        // Take both the string as input
        Solution ob;
        cout << ob.lcs(n, m, s1, s2) << endl;
    }
    return 0;
}

// } Driver Code Ends
