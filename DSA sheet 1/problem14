// Maximum sum Rectangle problem.

//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution {
  public:
    int solve(vector<int> &curr){
        int R = curr.size();
        int mx = INT_MIN;
        int c = INT_MIN/2;
        for(int i=0;i<R;i++){
            c+=curr[i];
            if(curr[i]>c){
                c=curr[i];
            }
            mx = max(mx, c);
        }
        return mx;
    }
    int maximumSumRectangle(int R, int C, vector<vector<int>> M) {
        for(int i=0;i<R;i++){
            for(int j=1;j<C;j++){
                M[i][j]+=M[i][j-1];
            }
        }
        int ans = INT_MIN;
        for(int i=0;i<C;i++){
            for(int j=-1;j<i;j++){
                vector<int> curr(R);
                if(j==-1){
                    for(int k=0;k<R;k++){
                        curr[k]=M[k][i];
                    }
                }
                else {
                    for(int k=0;k<R;k++){
                        curr[k]=M[k][i]-M[k][j];
                    }
                }
                ans = max(ans, solve(curr));
            }
        }
        return ans;
    }
};


//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int N, M;
        cin >> N >> M;
        vector<vector<int>> v(N, vector<int>(M));
        for (int i = 0; i < N; i++)
            for (int j = 0; j < M; j++) cin >> v[i][j];
        Solution ob;
        cout << ob.maximumSumRectangle(N, M, v) << "\n";
    }
}
// } Driver Code Ends
