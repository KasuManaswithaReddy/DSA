// Count Palindrome Sub-Strings of a String problem.

//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

int CountPS(char S[], int N);

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int N;
        cin>>N;
        char S[N+1];
        cin>>S;
        cout<<CountPS(S,N)<<endl;
    }
    return 0;
}


// } Driver Code Ends


int CountPS(char S[], int N)
{
     int len=0;
    int count=0;
    for(int i=0;i<N;i++)
    {
        int low=i;
        int high=i+1;
        while(low>=0&&high<N&&S[low]==S[high])
        {
            count++;
            low--;
            high++;
        }
        low=i-1;
        high=i+1;
        while(low>=0&&high<N&&S[low]==S[high])
        {
            count++;
            low--;
            high++;
        }
    }
    return count;
    
    
}
